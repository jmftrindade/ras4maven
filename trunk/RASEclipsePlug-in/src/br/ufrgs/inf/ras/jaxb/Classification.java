//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.11.14 at 12:55:41 AM BRST 
//


package br.ufrgs.inf.ras.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * xmi:ordered=true
 * 
 * property order is (these are role names)
 *  1. context
 *  2. descriptorGroup
 * 
 * This node represents the classification section of the asset.
 * 
 * Each asset is described by one or more groups of {name, value} pair descriptors called descriptor groups. 
 * 
 * Each descriptor group may be defined by a Classification Schema. The classification section contains sets of descriptors that are defined by different schemas (at least one such set).
 * 
 * The classification section also identifies the context(s) for which the asset may be relevent or reused.
 * 
 * This model does not reflect all possible classification schemas. To accomplish this the DescriptorGroup may reference any schema that is external to the asset's specification.
 * 
 * <p>Java class for Classification complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Classification">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="descriptorGroup" type="{http://defaultprofile.ecore}DescriptorGroup" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="context" type="{http://defaultprofile.ecore}Context" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Classification", propOrder = {
    "descriptorGroups",
    "contexts"
})
@XmlRootElement(name = "Classification")
public class Classification {

    @XmlElement(name = "descriptorGroup")
    protected List<DescriptorGroup> descriptorGroups;
    @XmlElement(name = "context")
    protected List<Context> contexts;

    /**
     * Gets the value of the descriptorGroups property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the descriptorGroups property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescriptorGroups().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DescriptorGroup }
     * 
     * 
     */
    public List<DescriptorGroup> getDescriptorGroups() {
        if (descriptorGroups == null) {
            descriptorGroups = new ArrayList<DescriptorGroup>();
        }
        return this.descriptorGroups;
    }

    /**
     * Gets the value of the contexts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contexts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContexts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Context }
     * 
     * 
     */
    public List<Context> getContexts() {
        if (contexts == null) {
            contexts = new ArrayList<Context>();
        }
        return this.contexts;
    }

}
